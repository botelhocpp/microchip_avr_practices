Archive member included to satisfy reference by file (symbol)

bsp/lib/libavrbsp.a(start.o)  (_start)
bsp/lib/libavrbsp.a(gpio.o)   obj/main.o (gpio_init)
bsp/lib/libavrbsp.a(interrupt.o)
                              obj/main.o (ext_interrupt_enable)

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x0000000000008000 xr
SRAM             0x0000000000800100 0x0000000000000800 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
                0x00000000008008ff                PROVIDE (__stack_top, ((ORIGIN (SRAM) + LENGTH (SRAM)) - 0x1))

.text           0x0000000000000000      0x3b0
 *(.vectors)
 .vectors       0x0000000000000000       0x68 bsp/lib/libavrbsp.a(start.o)
                0x0000000000000068                . = ALIGN (0x2)
 *(.text)
 .text          0x0000000000000068       0xb6 obj/main.o
                0x0000000000000068                delay_ms
                0x0000000000000086                __vector_INT0_ISR
                0x00000000000000d2                __vector_PCINT2_ISR
 .text          0x000000000000011e       0x4c bsp/lib/libavrbsp.a(start.o)
                0x000000000000011e                _start
                0x0000000000000136                __copy_data
                0x0000000000000150                __clear_bss
                0x0000000000000166                __vector_TIMER0_OVF_ISR
                0x0000000000000166                __dummy_function
                0x0000000000000166                __vector_INT1_ISR
                0x0000000000000166                __vector_SPM_READY_ISR
                0x0000000000000166                __vector_TIMER1_CAPT_ISR
                0x0000000000000166                __vector_EE_READY_ISR
                0x0000000000000166                __vector_TWI_ISR
                0x0000000000000166                __vector_TIMER2_COMPA_ISR
                0x0000000000000166                __vector_ANALOG_COMP_ISR
                0x0000000000000166                __vector_TIMER1_OVF_ISR
                0x0000000000000166                __vector_USART_TX_ISR
                0x0000000000000166                __vector_SPI_STC_ISR
                0x0000000000000166                __vector_TIMER0_COMPA_ISR
                0x0000000000000166                __vector_USART_ADC_ISR
                0x0000000000000166                __vector_USART_UDRE_ISR
                0x0000000000000166                __vector_TIMER1_COMPA_ISR
                0x0000000000000166                __vector_PCINT1_ISR
                0x0000000000000166                __vector_WDT_ISR
                0x0000000000000166                __vector_TIMER2_COMPB_ISR
                0x0000000000000166                __vector_TIMER0_COMPB_ISR
                0x0000000000000166                __vector_PCINT0_ISR
                0x0000000000000166                __vector_USART_RX_ISR
                0x0000000000000166                __vector_TIMER1_COMPB_ISR
                0x0000000000000166                __vector_TIMER2_OVF_ISR
 .text          0x000000000000016a      0x120 bsp/lib/libavrbsp.a(gpio.o)
                0x000000000000016a                gpio_init
                0x00000000000001f2                gpio_write
                0x000000000000022a                gpio_toggle
                0x000000000000025a                gpio_read
 .text          0x000000000000028a      0x126 bsp/lib/libavrbsp.a(interrupt.o)
                0x000000000000028a                ext_interrupt_enable
                0x00000000000002ba                ext_interrupt_disable
                0x00000000000002d0                pin_change_interrupt_group_enable
                0x00000000000002f8                pin_change_interrupt_group_disable
                0x0000000000000322                pin_change_interrupt_enable
                0x0000000000000368                pin_change_interrupt_disable
                0x00000000000003fe                PROVIDE (__data_load_start, LOADADDR (.data))

.trampolines    0x00000000000003b0        0x0
 .trampolines   0x00000000000003b0        0x0 linker stubs

.text.startup   0x00000000000003b0       0x4e
 .text.startup  0x00000000000003b0       0x4e obj/main.o
                0x00000000000003b0                main

.data           0x0000000000800100       0x24 load address 0x00000000000003fe
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 obj/main.o
 .data          0x0000000000800100        0x0 bsp/lib/libavrbsp.a(start.o)
 .data          0x0000000000800100        0x0 bsp/lib/libavrbsp.a(gpio.o)
 .data          0x0000000000800100        0x0 bsp/lib/libavrbsp.a(interrupt.o)
 *(.rodata)
 .rodata        0x0000000000800100        0xc obj/main.o
                0x0000000000800100                leds
                0x0000000000800106                btns
 .rodata        0x000000000080010c       0x12 bsp/lib/libavrbsp.a(gpio.o)
                0x000000000080010c                gpio_pin_registers
                0x0000000000800112                gpio_ddr_registers
                0x0000000000800118                gpio_port_registers
 .rodata        0x000000000080011e        0x6 bsp/lib/libavrbsp.a(interrupt.o)
                0x000000000080011e                pin_change_mask_registers
 *(.rodata)
 *(.rodata*)
                0x0000000000800124                PROVIDE (__data_end, .)

.bss            0x0000000000800124        0x0 load address 0x0000000000000422
                0x0000000000800124                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800124        0x0 obj/main.o
 .bss           0x0000000000800124        0x0 bsp/lib/libavrbsp.a(start.o)
 .bss           0x0000000000800124        0x0 bsp/lib/libavrbsp.a(gpio.o)
 .bss           0x0000000000800124        0x0 bsp/lib/libavrbsp.a(interrupt.o)
 *(.COMMON)
                0x0000000000800124                PROVIDE (__bss_end, .)
LOAD obj/main.o
LOAD bsp/lib/libavrbsp.a
OUTPUT(obj/app.elf elf32-avr)
LOAD linker stubs

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 obj/main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 bsp/lib/libavrbsp.a(gpio.o)
 .comment       0x0000000000000011       0x12 bsp/lib/libavrbsp.a(interrupt.o)
